{"version":3,"file":"fishry.js.map","sources":["ng://fishry/lib/store/actions/fishry.actions.ts","ng://fishry/lib/store/reducers/fishry.reducer.ts","ng://fishry/lib/store/fishry.store.ts","ng://fishry/lib/fishry.service.ts","ng://fishry/lib/fishry.component.ts","ng://fishry/lib/components/fishry-image/fishry-image.component.ts","ng://fishry/lib/components/carousel/carousel.component.ts","ng://fishry/lib/components/nav/nav.component.ts","ng://fishry/lib/fishry.module.ts"],"sourcesContent":["import { AppStateModel } from \"../models/fishry.model\";\n\nexport class Action {\n\tconstructor(public type: string, public payload?: Partial<AppStateModel>) { }\n}\n\nexport const SET = 'SET';\nexport const UPDATE = 'UPDATE';\nexport const DELETE = 'DELETE';\n\nexport class setTest implements Action {\n\treadonly type = 'SET';\n\n\tconstructor(public payload: AppStateModel) { }\n}\n\nexport class updateTest implements Action {\n\treadonly type = 'UPDATE';\n\n\tconstructor(public payload: AppStateModel) { }\n}\n\nexport class deleteTest implements Action {\n\treadonly type = 'DELETE';\n\n\tconstructor(public payload: AppStateModel) { }\n}\n\nexport type Actions = setTest | updateTest | deleteTest;","import { scan } from \"rxjs/operators\";\n\nimport * as FishryActions from '../actions/fishry.actions';\nimport { AppStateModel } from \"../models/fishry.model\";\nimport { omit } from \"lodash\";\n\nexport const reducer = () =>\n\tscan<any>((state: AppStateModel, action: FishryActions.Actions) => {\n\t\tlet next;\n\t\tswitch (action.type) {\n\t\t\tcase FishryActions.SET:\n\t\t\t\tnext = action.payload;\n\t\t\t\tbreak;\n\t\t\tcase FishryActions.UPDATE:\n\t\t\t\tnext = { ...state, ...action.payload };\n\t\t\t\tbreak;\n\t\t\tcase FishryActions.DELETE:\n\t\t\t\tnext = omit(state, action.payload);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tnext = state;\n\t\t\t\tbreak;\n\t\t}\n\t\t/* if (state.isPlatformBrowser) {\n\t\t\tconst win = window as any;\n\t\t\twin.devTools.send(action.type, next);\n\t\t} */\n\n\t\treturn next;\n\t}, {});","import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { Subject, Observable, pipe, BehaviorSubject } from 'rxjs';\nimport { scan, map, distinctUntilChanged, shareReplay } from 'rxjs/operators';\nimport { reducer } from './reducers/fishry.reducer';\nimport { get, isEqual } from 'lodash';\n\nimport * as FishryActions from './actions/fishry.actions';\nimport { AppStateModel } from \"./models/fishry.model\";\nimport { Action } from \"./actions/fishry.actions\";\nimport { isPlatformBrowser } from \"@angular/common\";\n\n// const win = window as any;\n\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FishryStore {\n\t// state$: Observable<any>;\n\tprivate _state$: BehaviorSubject<AppStateModel>;\n\tactions: Subject<Action> = new Subject();\n\n\tdevTools: any;\n\tinitialState: AppStateModel;\n\n\tconstructor(\n\t\t@Inject(PLATFORM_ID) private platformId: Object,\n\t) {\n\n\t\tthis._state$ = new BehaviorSubject((this.initialState));\n\t\t// this.state$ = this._state$.asObservable();\n\n\t\tthis.actions.pipe(\n\t\t\treducer(),\n\t\t\tshareReplay(1),\n\t\t).subscribe((state) => this._state$.next(state));\n\t\t// Redux Dev Tools\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\t// const win = window as any;\n\t\t\t// win.devTools = win.__REDUX_DEVTOOLS_EXTENSION__.connect();\n\t\t}\n\t}\n\n\tselect$(path: string): Observable<any> {\n\t\treturn this.state$.pipe(select(path));\n\t}\n\n\tselect(path: string): Promise<any> {\n\t\treturn this.state$.pipe(select(path)).toPromise()\n\t}\n\n\tdispatch(action: Action) {\n\t\tthis.actions.next(action);\n\t}\n\n\tget state(): AppStateModel {\n\t\treturn this._state$.getValue();\n\t}\n\n\tget state$(): Observable<AppStateModel> {\n\t\treturn this._state$.asObservable();\n\t}\n\n\tsetState(nextState: AppStateModel): void {\n\t\tthis._state$.next(nextState);\n\t}\n\n}\n\nexport const select = path =>\n\tpipe(\n\t\tmap(state => get(state, path, null)),\n\t\tdistinctUntilChanged(isEqual)\n\t)","import { Injectable, Inject, PLATFORM_ID } from '@angular/core';\nimport { FishryStore } from \"./store/fishry.store\";\nimport { Http } from '@angular/http';\nimport { map, share, catchError, tap } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { Action } from './store/actions/fishry.actions';\nimport { IGeneralSettings, AppStateModel } from \"./store/models/fishry.model\";\n// import { makeStateKey, TransferState } from '@angular/platform-browser';\nimport { isPlatformBrowser } from '@angular/common';\nimport { TransferState, makeStateKey } from '@angular/platform-browser';\n\nimport * as Redis from 'redis';\n\nconst STATE_KEY = makeStateKey('appState');\n@Injectable({\n  providedIn: 'root'\n})\nexport class FishryService {\n\n  appState: AppStateModel = {\n    isLoaded: false,\n    generalSettings: null,\n    themeSettings: null,\n    navigation: null,\n    storeSettings: null,\n    storeID: null,\n    domain: null,\n    isPlatformBrowser: false\n  }\n\n  constructor(\n    @Inject('domain') public domain: string,\n    private http: Http,\n    private store: FishryStore,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private state: TransferState\n  ) {\n    this.initDomain(domain);\n    this.appState = this.state.get(STATE_KEY, null as AppStateModel);\n    if (!this.appState) {\n      console.log('appState not set');\n      this.initGeneralSettings(domain).subscribe();\n    } else {\n      console.log('appState alrady set');\n      this.store.dispatch(new Action('SET', {\n        isLoaded: this.appState.isLoaded,\n        generalSettings: this.appState.generalSettings,\n        themeSettings: this.appState.themeSettings,\n        navigation: this.appState.navigation,\n        storeSettings: this.appState.storeSettings,\n        storeID: this.appState.storeID,\n        domain: this.appState.domain,\n        isPlatformBrowser: false\n      }));\n      console.log('the state', this.store.state);\n    }\n  }\n\n  initDomain(domain: string) {\n    this.store.dispatch(new Action('SET', { domain: domain }));\n  }\n\n  initGeneralSettings(domain: string) {\n    return this.fetchGeneralSettings(this.domain).pipe(\n      catchError((err) => {\n        return throwError(err)\n      }),\n      tap((result: IGeneralSettings) => {\n        console.log('result', result);\n        this.store.dispatch(new Action('UPDATE', { generalSettings: result }));\n        this.initThemeSettings(result.theme_settings);\n        this.initStoreID(result.storeID);\n        this.initStoreSettings(result.settings)\n        this.initNavigation(result.nav_data);\n        this.store.dispatch(new Action('UPDATE', { isLoaded: true }));\n        let appState: AppStateModel = {\n          isLoaded: this.store.state.isLoaded,\n          generalSettings: this.store.state.generalSettings,\n          themeSettings: this.store.state.themeSettings,\n          navigation: this.store.state.navigation,\n          storeSettings: this.store.state.storeSettings,\n          storeID: this.store.state.storeID,\n          domain: this.store.state.domain,\n          isPlatformBrowser: false\n        }\n        this.state.set(STATE_KEY, appState as AppStateModel);\n      }, error => console.error('error', error.message)\n      )\n    )\n  }\n\n  initThemeSettings(themeSettings: any) {\n    themeSettings = JSON.parse(themeSettings);\n    let mainBanner = themeSettings.mainBanner;\n    mainBanner = Object.keys(mainBanner).map(i => mainBanner[i]);\n    themeSettings.mainBanner = mainBanner;\n    this.store.dispatch(new Action('UPDATE', { themeSettings: themeSettings }))\n  }\n\n  fixThemeSettingsData(themeSettings: any) {\n    let mainBanner = themeSettings.mainBanner;\n    mainBanner = Object.keys(mainBanner).map(i => mainBanner[i]);\n    themeSettings.mainBanner = mainBanner;\n  }\n\n  initStoreID(storeID: string) {\n    this.store.dispatch(new Action('UPDATE', { storeID: storeID }))\n  }\n\n  initStoreSettings(settings: any) {\n    settings = JSON.parse(settings);\n    this.store.dispatch(new Action('UPDATE', { storeSettings: settings }));\n  }\n\n  initNavigation(navigation: any) {\n    this.store.dispatch(new Action('UPDATE', { navigation: navigation }));\n  }\n\n  private fetchGeneralSettings(appDomain?: string) {\n    let response = this.http.get(`https://fishry-storefront-apis-stg.azurewebsites.net/get-store-info?domain=${appDomain}`);\n    return response.pipe(\n      map(resp => resp.json().data),\n      share()\n    );\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'fishry-fishry',\n  template: `\n    <p>\n      fishry works!\n    </p>\n  `,\n  styles: []\n})\nexport class FishryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input, ViewChild, ElementRef, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'fishry-image',\n  templateUrl: './fishry-image.component.html',\n  styleUrls: ['./fishry-image.component.scss']\n})\nexport class FishryImageComponent implements OnInit {\n  @Input() src: string = '';\n  @Input() route: string = 'product';\n  @Input() size: string = '';\n  @Input() enableLazyLoad: boolean = true;\n\n  @ViewChild('img') img: ElementRef;\n  highRes: HTMLImageElement;\n  highResReady: boolean = false;\n  // cdn: string = environment.cdn;\n  cdn: string = 'https://fishry-image.azureedge.net/';\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) { }\n\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.highRes = new Image();\n      this.activeLoad();\n\n      if (this.enableLazyLoad) {\n        this.lazyLoad();\n      }\n    }\n  }\n\n  activeLoad() {\n    this.img.nativeElement.onerror = () => {\n      if (this.src) {\n        this.img.nativeElement.src = `${this.cdn}${this.route}/${this.src}`;\n      } else {\n        this.img.nativeElement.onerror = null;\n      }\n    };\n\n    if (this.src) {\n      if (this.enableLazyLoad && this.size !== 'xxxs') {\n        // If lazy loading is enabled, return xxs.\n        this.img.nativeElement.src = `${this.cdn}${this.route}/${this.src}/xxs`;\n      } else if (this.size) {\n        // If lazy loading is disabled, and size is mentioned, return size.\n        this.img.nativeElement.src = `${this.cdn}${this.route}/${this.src}/${this.size}`;\n      } else {\n        // If lazy loading is disabled and size is not mentioned, return full size.\n        this.img.nativeElement.src = `${this.cdn}${this.route}/${this.src}`;\n      }\n    }\n  }\n\n  lazyLoad() {\n    if (this.size === '') {\n      this.highRes.src = `${this.cdn}${this.route}/${this.src}`;\n    } else {\n      this.highRes.src = `${this.cdn}${this.route}/${this.src}/${this.size}`;\n    }\n\n    this.highRes.onload = () => {\n      this.highResReady = true;\n      this.img.nativeElement.src = this.highRes.src;\n    };\n\n    if (this.size) {\n      this.highRes.onerror = () => {\n        this.img.nativeElement.src = `${this.cdn}${this.route}/${this.src}`;\n        this.highRes.onerror = null;\n      };\n    }\n  }\n\n  ngAfterViewInit() {\n    this.img.nativeElement.onload = () => {\n      if (!this.highResReady) {\n        this.img.nativeElement.classList.add('loaded');\n      } else {\n        this.img.nativeElement.classList.remove('blur-in');\n      }\n    };\n    // if (this.platformService.platformBrowser()) {\n    // }\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { NguCarouselConfig } from '@ngu/carousel';\nimport { IBanner } from '../../store/models/banner.model';\n\n@Component({\n  selector: 'fishry-carousel',\n  templateUrl: './carousel.component.html',\n  styleUrls: ['./carousel.component.scss']\n})\nexport class CarouselComponent implements OnInit {\n  @Input() banner: IBanner[] = [];\n\n  carouselOne: NguCarouselConfig = {\n    grid: { xs: 1, sm: 1, md: 1, lg: 1, all: 0 },\n    slide: 1,\n    speed: 400,\n    // interval: 4000,\n    point: {\n      visible: true\n    },\n    load: 2,\n    touch: true,\n    loop: true,\n    custom: 'banner'\n  }\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'fishry-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n  @Input() menuItems: any[];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  listExists(item): boolean {\n    if (item.list && item.list.length > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  listEmpty(item): boolean {\n    if (item.list && item.list.length == 0) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { FishryComponent } from './fishry.component';\nimport { CommonModule } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatMenuModule, MatButtonModule } from \"@angular/material\";\nimport { NguCarouselModule } from '@ngu/carousel';\nimport { ModuleWithProviders } from '@angular/compiler/src/core';\nimport { FishryService } from './fishry.service';\nimport { FishryImageComponent } from './components/fishry-image/fishry-image.component';\nimport { CarouselComponent } from './components/carousel/carousel.component';\nimport { NavComponent } from './components/nav/nav.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    MatMenuModule,\n    MatButtonModule,\n    NguCarouselModule\n  ],\n  declarations: [FishryComponent, FishryImageComponent, CarouselComponent, NavComponent],\n  exports: [FishryComponent, FishryImageComponent, CarouselComponent, NavComponent]\n})\nexport class FishryModule {\n  domain: string;\n  static forRoot(domain: string): ModuleWithProviders {\n    return {\n      ngModule: FishryModule,\n      providers: [\n        FishryService,\n        {\n          provide: 'domain',\n          useValue: domain\n        }\n      ]\n    }\n  }\n}\n"],"names":["FishryActions.SET","FishryActions.UPDATE","FishryActions.DELETE"],"mappings":"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"}
